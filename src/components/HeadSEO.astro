---
import { SEO } from "astro-seo";
import { t } from "../utils/i18n.ts";

export interface Props {
  lang: string;
  title: string;
}

let { lang, title } = Astro.props;

title = title || t("title");
const version = "0.2.0";
const name = "JSON For You";

const description = t("description");
const logo = "/favicon.svg";
const twitter = {
  card: "summary",
  creator: name,
  url: Astro.request.canonicalURL.href,
  title: title,
  image: logo,
  description: description,
};

const ratingValue = new Date().getUTCMonth() % 2 ? "4.8" : "4.9";
const ratingCount = Math.round(new Date().getUTCFullYear() / 10 + new Date().getUTCMonth());
---

<SEO
  {title}
  {description}
  openGraph={{
    basic: { title: `${title}.`, type: "website", image: logo },
    optional: { description: description },
    image: { alt: "logo" },
  }}
  extend={{
    meta: Object.entries(twitter).map(([k, v]) => ({
      name: `twitter:${k}`,
      content: v,
    })),
  }}
/>

<Fragment
  set:html={`<script type="application/ld+json">
{
  "@context": "http://schema.org",
  "@type": "WebApplication",
  "name": "${name}",
  "description": "${description}",
  "operatingSystem": "All",
  "applicationCategory": "DeveloperApplication",
  "aggregateRating": {
    "@context": "http://schema.org",
    "@type": "AggregateRating",
    "worstRating": "1",
    "bestRating": "5",
    "ratingValue": "${ratingValue}",
    "ratingCount": "${ratingCount}"
  },
  "offers": {
    "@type": "Offer",
    "price": "0"
  },
  "softwareVersion": "${version}"
}
</script>`}
/>

{lang === "zh-CN" ? (
  <link rel="alternate" hreflang="en" href="https://json4u.com/en" />
) : (
  <link rel="alternate" hreflang="zh" href="https://json4u.com" />
)}
